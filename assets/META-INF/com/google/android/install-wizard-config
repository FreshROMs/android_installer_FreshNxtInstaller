# =========================================
#         _____              _      
#        |  ___| __ ___  ___| |__   
#        | |_ | '__/ _ \/ __| '_ \  
#        |  _|| | |  __/\__ \ | | | 
#        |_|  |_|  \___||___/_| |_| 
#                              
# =========================================
#  
#  Installer Config
#  Based on AROMA Installer config
#  The Fresh Project
#  Copyright (C) 2022 TenSeventy7
#  
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#  
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#  
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <https://www.gnu.org/licenses/>.
#  
#  =========================

# Set colorspace and theme
ini_set("force_colorspace","rgba");
theme("fresh");

# Show splash screen
splash(2000, "splash/setup_splash_fresh_four");

# Set font styles and font sizes
fontresload( "0", "ttf/SEC-Regular.ttf;ttf/DroidSansFallback.ttf;", "12" );
fontresload( "1", "ttf/SEC-Medium.ttf;ttf/DroidSansFallback.ttf;", "16" );
fontresload( "2", "ttf/SEC-Light.ttf;ttf/DroidSansFallback.ttf;", "18" );

# Load default language before selection
loadlang("strings/en.lang");

# Load language picker
include("modules/select_language.edify");

# 2 - Welcome screen
viewbox(
    "<~welcome.title>",

    "<@center><~welcome.text1></@>\n\n" +
    "<@center><~welcome.text2></@>\n\n\n\n" +
    "<@center><~welcome.text3></@>",

    "@fresh"
);

# 3 - ToS and privacy policy screen
agreebox(
    "<~terms.title>",
    "<~terms.summary>",
    "@terms",
    resread("text/tos.txt"),
    "<~terms.check>",
    "<~terms.confirm>"
);

# Scan for a current Fresh installation and check if we can do a re-install
pleasewait("<~wait.install.scan>");
resexec("tools/fresh-tk", "mounts_checker");
exec("/sbin/mount", file_getprop("/tmp/toolkit.prop", "block.system"), file_getprop("/tmp/toolkit.prop", "block.system.mount"));
restotmp("fresh.prop", "fresh.prop");
resexec("tools/fresh-tk", "install_rom_check");

if file_getprop("/tmp/toolkit.prop", "system.exist.rom") == "false" then
  menubox(
      "<~menu.title>",
      "<~menu.new.summary>",
      "@install",
      "menu.prop",
      
      "<~menu.express.title>",      "<~menu.express.summary>",        "@install_express",
      "<~menu.custom.title>",       "<~menu.custom.summary>",         "@install_custom"
  );

  # Express installation
  if prop("menu.prop","selected") == "1" then
    include("modules/install_express.edify");
  endif;

  # Custom installation
  if prop("menu.prop","selected") == "2" then
    include("modules/install_custom.edify");
  endif;

else

  # If Fresh 3, migrate addons
  if file_getprop("/tmp/toolkit.prop", "system.exist.rom.three") == "true" then
    include("modules/install_express.edify");
    resexec("tools/fresh-tk", "migrate_fresh_three_addons");
  endif;

  # If Fresh 4 prerelease, set defaults
  if file_getprop("/tmp/toolkit.prop", "system.exist.rom.four") == "false" then
    include("modules/install_express.edify");
  endif;

  if file_getprop("/tmp/toolkit.prop", "system.exist.rom") == "upgrade" then
    menubox(
        "<~menu.title>",
        "<~menu.current.summary>",
        "@install",
        "menu.prop",
        
        "<~menu.upgrade.title>",      "<~menu.upgrade.summary>",        "@icon_next",
        "<~menu.express.title>",      "<~menu.express.summary>",        "@install_express",
        "<~menu.custom.title>",       "<~menu.custom.summary>",         "@install_custom"
    );
  else
    menubox(
        "<~menu.title>",
        "<~menu.current.summary>",
        "@install",
        "menu.prop",
        
        "<~menu.reinstall.title>",    "<~menu.reinstall.summary>",      "@install_reinstall",
        "<~menu.express.title>",      "<~menu.express.summary>",        "@install_express",
        "<~menu.custom.title>",       "<~menu.custom.summary>",         "@install_custom"
    );
  endif;

  # Express installation
  if prop("menu.prop","selected") == "2" then
    include("modules/install_express.edify");
  endif;

  # Custom installation
  if prop("menu.prop","selected") == "3" then
    include("modules/install_custom.edify");
  endif;

endif;


# Show summary of installation
pleasewait("<~wait.generic>");
resexec("tools/make-summary");

ini_set("text_next", "<~confirm.next>");

textbox(
    "<~confirm.title>",
    "<~confirm.summary>",
    "@confirm",
    read("/tmp/summary.txt")
);

ini_set("text_next", "<~install.next>");

setvar("installstatus",
  install(
    "<~install.title>",
    "<~install.summary>",
    "@install",
    "<~install.finish>"
  )
);

ini_set("text_next", "<~install.exit>");

checkviewbox(
    "<~finish.title>",
  
    "<@center><~finish.text1></@>\n\n" +
    "<@center><~finish.text2></@>\n\n\n\n" +
    "<@center><~finish.text3></@>",

    "@fresh",

    "<~finish.button.restart>",
    "0",
    "reboot_after_setup"
);

if getvar("reboot_after_setup")=="1" then
  reboot("onfinish");
endif;
